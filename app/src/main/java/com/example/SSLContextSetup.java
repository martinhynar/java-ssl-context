/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.example;

import javax.net.ssl.SSLParameters;
import java.net.Authenticator;
import java.net.PasswordAuthentication;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.time.Duration;
import java.time.temporal.ChronoUnit;

public class SSLContextSetup {
    public int callRemote(String url, String username, String password) throws Exception {
        // https://docs.oracle.com/en/java/javase/17/security/java-secure-socket-extension-jsse-reference-guide.html#GUID-93DEEE16-0B70-40E5-BBE7-55C3FD432345
        System.setProperty("javax.net.debug", "all");

        HttpClient.Builder httpClientBuilder = HttpClient.newBuilder();

        // Set Connection Timeout
        httpClientBuilder.connectTimeout(Duration.of(10, ChronoUnit.SECONDS));

        boolean tweakSSLParameters = true;
        if (tweakSSLParameters) {
            // Tweak SSL Parameters like protocol, cipher suites, ...
            SSLParameters sslParameters = new SSLParameters();
            // Example
            sslParameters.setProtocols(new String[]{"TLSv1.3", "TLSv1.2"});
            sslParameters.setCipherSuites(new String[]{"TLS_AES_256_GCM_SHA384", "TLS_AES_128_GCM_SHA256", "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384", "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256", "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"});
            httpClientBuilder.sslParameters(sslParameters);
        }

        // Follow redirect
        httpClientBuilder.followRedirects(HttpClient.Redirect.ALWAYS);

        // Maybe authenticate
        if (username != null && password != null) {
            httpClientBuilder.authenticator(new Authenticator() {
                @Override
                protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication(username, password.toCharArray());
                }
            });
        }

        // Build client
        HttpClient httpClient = httpClientBuilder.build();
        SSLParameters s = httpClient.sslParameters();

        // Send HTTP request
        HttpRequest request = HttpRequest.newBuilder()
                .uri(URI.create(url))
                .build();

        HttpResponse<String> response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());

        // Return status code
        return response.statusCode();
    }

    public static void main(String[] args) throws Exception {
        System.out.println(new SSLContextSetup().callRemote("https://google.com/", null, null));
    }
}
